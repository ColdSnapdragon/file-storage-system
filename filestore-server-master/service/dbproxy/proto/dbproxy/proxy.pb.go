// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.15.5
// source: proxy.proto

package dbproxy

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SingleAction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Params        []byte                 `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"` // 请求参数列表, json-encoded
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SingleAction) Reset() {
	*x = SingleAction{}
	mi := &file_proxy_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SingleAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleAction) ProtoMessage() {}

func (x *SingleAction) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleAction.ProtoReflect.Descriptor instead.
func (*SingleAction) Descriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{0}
}

func (x *SingleAction) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SingleAction) GetParams() []byte {
	if x != nil {
		return x.Params
	}
	return nil
}

type ReqExec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sequence      bool                   `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`       // 是否严格按照给定顺序串行执行
	Transaction   bool                   `protobuf:"varint,2,opt,name=transaction,proto3" json:"transaction,omitempty"` // 所有action是否在一个事务里执行
	ResultType    int32                  `protobuf:"varint,3,opt,name=resultType,proto3" json:"resultType,omitempty"`   // 0表示每个sql函数的结果都返回; 1表示只返回最后一个执行sql的结果(要求sequence执行)
	Action        []*SingleAction        `protobuf:"bytes,4,rep,name=action,proto3" json:"action,omitempty"`            // 一个或多个sql函数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReqExec) Reset() {
	*x = ReqExec{}
	mi := &file_proxy_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqExec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqExec) ProtoMessage() {}

func (x *ReqExec) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqExec.ProtoReflect.Descriptor instead.
func (*ReqExec) Descriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{1}
}

func (x *ReqExec) GetSequence() bool {
	if x != nil {
		return x.Sequence
	}
	return false
}

func (x *ReqExec) GetTransaction() bool {
	if x != nil {
		return x.Transaction
	}
	return false
}

func (x *ReqExec) GetResultType() int32 {
	if x != nil {
		return x.ResultType
	}
	return 0
}

func (x *ReqExec) GetAction() []*SingleAction {
	if x != nil {
		return x.Action
	}
	return nil
}

type RespExec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data          []byte                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"` // 执行的结果
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RespExec) Reset() {
	*x = RespExec{}
	mi := &file_proxy_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespExec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespExec) ProtoMessage() {}

func (x *RespExec) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespExec.ProtoReflect.Descriptor instead.
func (*RespExec) Descriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{2}
}

func (x *RespExec) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RespExec) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespExec) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_proxy_proto protoreflect.FileDescriptor

const file_proxy_proto_rawDesc = "" +
	"\n" +
	"\vproxy.proto\x12\x18go.micro.service.dbproxy\":\n" +
	"\fSingleAction\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06params\x18\x02 \x01(\fR\x06params\"\xa7\x01\n" +
	"\aReqExec\x12\x1a\n" +
	"\bsequence\x18\x01 \x01(\bR\bsequence\x12 \n" +
	"\vtransaction\x18\x02 \x01(\bR\vtransaction\x12\x1e\n" +
	"\n" +
	"resultType\x18\x03 \x01(\x05R\n" +
	"resultType\x12>\n" +
	"\x06action\x18\x04 \x03(\v2&.go.micro.service.dbproxy.SingleActionR\x06action\"D\n" +
	"\bRespExec\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\x12\x12\n" +
	"\x04data\x18\x03 \x01(\fR\x04data2j\n" +
	"\x0eDBProxyService\x12X\n" +
	"\rExecuteAction\x12!.go.micro.service.dbproxy.ReqExec\x1a\".go.micro.service.dbproxy.RespExec\"\x00B\n" +
	"Z\b/dbproxyb\x06proto3"

var (
	file_proxy_proto_rawDescOnce sync.Once
	file_proxy_proto_rawDescData []byte
)

func file_proxy_proto_rawDescGZIP() []byte {
	file_proxy_proto_rawDescOnce.Do(func() {
		file_proxy_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proxy_proto_rawDesc), len(file_proxy_proto_rawDesc)))
	})
	return file_proxy_proto_rawDescData
}

var file_proxy_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proxy_proto_goTypes = []any{
	(*SingleAction)(nil), // 0: go.micro.service.dbproxy.SingleAction
	(*ReqExec)(nil),      // 1: go.micro.service.dbproxy.ReqExec
	(*RespExec)(nil),     // 2: go.micro.service.dbproxy.RespExec
}
var file_proxy_proto_depIdxs = []int32{
	0, // 0: go.micro.service.dbproxy.ReqExec.action:type_name -> go.micro.service.dbproxy.SingleAction
	1, // 1: go.micro.service.dbproxy.DBProxyService.ExecuteAction:input_type -> go.micro.service.dbproxy.ReqExec
	2, // 2: go.micro.service.dbproxy.DBProxyService.ExecuteAction:output_type -> go.micro.service.dbproxy.RespExec
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proxy_proto_init() }
func file_proxy_proto_init() {
	if File_proxy_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proxy_proto_rawDesc), len(file_proxy_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proxy_proto_goTypes,
		DependencyIndexes: file_proxy_proto_depIdxs,
		MessageInfos:      file_proxy_proto_msgTypes,
	}.Build()
	File_proxy_proto = out.File
	file_proxy_proto_goTypes = nil
	file_proxy_proto_depIdxs = nil
}
